<?php

namespace common\models;

use framework\components\Date;
use Yii;

/**
 * This is the model class for table "sales_flat_order_item".
 *
 * @property string $item_id
 * @property string $order_id
 * @property integer $wholesaler_id
 * @property string $created_at
 * @property string $updated_at
 * @property string $product_id
 * @property string $product_type
 * @property string $product_options
 * @property string $tags
 * @property string $weight
 * @property string $sku
 * @property string $name
 * @property string $brand
 * @property string $qty
 * @property string $price
 * @property string $original_price
 * @property string $row_total
 * @property string $image
 * @property string $barcode
 * @property string $specification
 * @property string $first_category_id
 * @property string $third_category_id
 * @property string $second_category_id
 */
class SalesFlatOrderItem extends \framework\db\ActiveRecord
{
	const RECEIPT_YES = 1;
	const RECEIPT_NO = 0;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'sales_flat_order_item';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('coreDb');
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['order_id', 'wholesaler_id', 'product_id', 'qty'], 'integer']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'item_id' => 'Item Id',
            'order_id' => 'Order Id',
            'wholesaler_id' => 'Store Id',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'product_id' => 'Product Id',
            'product_type' => 'Product Type',
            'product_options' => 'Product Options',
            'weight' => 'Weight',
            'sku' => 'Sku',
            'name' => 'Name',
            'description' => 'Description',
            'is_qty_decimal' => 'Is Qty Decimal',
            'qty_ordered' => 'Qty Ordered',
            'price' => 'Price',
            'original_price' => 'Original Price',
            'row_total' => 'Row Total',
        ];
    }

    public static function getGeneralSelectColumns()
    {
        return [
            'item_id',
            'product_id',
            'name',
            'barcode',
            'specification',
            'image',
            'price',
            'original_price',
            'qty',
            'row_total',
        ];
    }

    public function beforeSave($insert)
    {
        $date = new Date();
        $this->created_at = $date->gmtDate();
        $this->updated_at = $date->gmtDate();
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
